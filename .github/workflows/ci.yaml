# @file      ci.yml
# @brief     Used to perform code format checking and Sonarcloud analysis
#
# MIT License
#
# Copyright (c) 2022-2023 joelguittet and mender-mcu-client contributors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: ci
on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 0 1 * *'
jobs:
  check:
    name: Update Open Source Layers Reference
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Update Open Source Layers Reference
        run: |
          sudo apt-get install hub -y

          export reviewer1=UmairAsghar-max

          git config --global user.name "${{ github.event.head_commit.author.name }}"
          git config --global user.email "${{ github.event.head_commit.author.email }}"

          git checkout -b feature/layers-ref-update
          git submodule update --init --recursive

          git submodule foreach '
              latest_release=$(git tag --sort=committerdate | grep -E '[0-9]' | tail -1)
              if [ -n "$latest_release" ]; then
                  if [ "$(git rev-parse HEAD)" != "$(git rev-parse $latest_release)" ]; then
                  echo "Latest Release: $latest_release"
                  echo "Latest Release Commit SHA: $(git rev-parse $latest_release)"
                  git checkout "$latest_release"
                  fi
              fi
              '
          if [ -n "$(git status --porcelain)" ]; then
            git commit -am "Update open source layers reference"
            git push origin feature/layers-ref-update
            hub pull-request -b ${GITHUB_REF#refs/heads/} -m "Update open source layers reference" -r $reviewer1
            hub pr list --head feature/layers-ref-update --format='%t'
          else
            echo "Nothing to Commit"
            exit 0
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

