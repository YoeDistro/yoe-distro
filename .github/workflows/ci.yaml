name: Yoe Distro CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
      - dunfell
  pull_request:
    branches:
      - master
      - dunfell
jobs:
  build:
    name: Yoe Build
    runs-on: [self-hosted, Linux]
    timeout-minutes: 720
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          #path: '${{ github.event.pull_request.head.sha }}'
      - name: Setup
        run: |
          export DOCKER_REPO=none
          export LANG=en_US.UTF-8
          export SSTATE_CACHE_DIR=/srv/build/sstate-cache
          echo export DOCKER_REPO=none > local.sh
          echo export LANG=en_US.UTF-8 >> local.sh
          echo export SSTATE_CACHE_DIR=/srv/build/sstate-cache >> local.sh
          cp conf/local.conf.sample conf/local.conf
          echo SSTATE_DIR = \"$SSTATE_CACHE_DIR\" >> conf/local.conf
          echo IMAGE_CLASSES += \"testimage testsdk\" >> conf/local.conf
          echo INHERIT += \"report-error rm_work\" >> conf/local.conf
          echo ERR_REPORT_SERVER = \"errors.yoctoproject.org\" >> conf/local.conf
          echo ERR_REPORT_PORT = \"80\" >> conf/local.conf
          echo ERR_REPORT_USERNAME = \"Drone Autobuilder\" >> conf/local.conf
          echo ERR_REPORT_EMAIL = \"info@yoedistro.org\" >> conf/local.conf
          echo TOOLCHAIN = \"clang\" >> conf/local.conf
          echo BB_NUMBER_THREADS = \"16\" >> conf/local.conf
          echo PARALLEL_MAKE = \"-j 32\" >> conf/local.conf
          echo ZSTD_THREADS = \"8\" >> conf/local.conf
          echo XZ_THREADS = \"8\" >> conf/local.conf
          echo XZ_MEMLIMIT = \"20%\" >> conf/local.conf
          /bin/bash -c "sed -i -e 's/PACKAGE_FEED_URI.*$//' conf/site.conf"
          /bin/bash -c "sed -i -e 's/SDK_UPDATE_URL.*$//' conf/site.conf"
      - name: Build Image
        run: |
          /bin/bash -c ". ./envsetup.sh qemuarm64 && bitbake yoe-kiosk-image"
      - name: Test Image
        run: |
          export DISPLAY=":0"
          echo TESTIMAGE_AUTO:qemuall = \"1\" >> conf/local.conf
          /bin/bash -c ". ./envsetup.sh qemuarm64 && bitbake yoe-sdk-image"
      - name: Prepare results
        run: |
          /bin/bash -c ". ./envsetup.sh qemuarm64 && resulttool report build/tmp/log/oeqa"
      - name: Clean shared state
        run: |
          /bin/bash -c ". ./envsetup.sh qemuarm64 && ./sources/poky/scripts/sstate-cache-management.py -d --remove-orphans -y "
