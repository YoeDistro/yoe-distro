name: release

on:
  push:
    tags:
      - '*'

jobs:
  build_release:
    name: build_release
    runs-on: [self-hosted, Linux]
    timeout-minutes: 720
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup
        run: |
          export DOCKER_REPO=none
          export LANG=en_US.UTF-8
          export SSTATE_CACHE_DIR=/scratch/sstate-cache
          echo export DOCKER_REPO=none > local.sh
          echo export LANG=en_US.UTF-8 >> local.sh
          echo export SSTATE_CACHE_DIR=/scratch/sstate-cache >> local.sh
          cp conf/local.conf.sample conf/local.conf
          echo SSTATE_DIR = \"$SSTATE_CACHE_DIR\" >> conf/local.conf
          echo IMAGE_CLASSES += \"testimage testsdk\" >> conf/local.conf
          echo INHERIT += \"report-error rm_work\" >> conf/local.conf
          echo ERR_REPORT_SERVER = \"errors.yoctoproject.org\" >> conf/local.conf
          echo ERR_REPORT_PORT = \"80\" >> conf/local.conf
          echo ERR_REPORT_USERNAME = \"Yoe Autobuilder\" >> conf/local.conf
          echo ERR_REPORT_EMAIL = \"info@yoedistro.org\" >> conf/local.conf
          echo TOOLCHAIN = \"clang\" >> conf/local.conf
          echo BB_NUMBER_THREADS = \"16\" >> conf/local.conf
          echo PARALLEL_MAKE = \"-j 32\" >> conf/local.conf
          echo ZSTD_THREADS = \"8\" >> conf/local.conf
          echo XZ_THREADS = \"8\" >> conf/local.conf
          echo XZ_MEMLIMIT = \"20%\" >> conf/local.conf
          /bin/bash -c "sed -i -e 's/PACKAGE_FEED_URI.*$//' conf/site.conf"
          /bin/bash -c "sed -i -e 's/SDK_UPDATE_URL.*$//' conf/site.conf"
      - name: Build Images
        run: |
          /bin/bash -c ". ./envsetup.sh visionfive2 && bitbake yoe-installer-image"
          /bin/bash -c ". ./envsetup.sh rpi4-64 && bitbake yoe-installer-image yoe-kiosk-image"
          /bin/bash -c ". ./envsetup.sh jetson-agx-orin-devkit && bitbake yoe-swupdate-image-tegra"
      - name: ver
        run: echo "ver=$(printf ' - ' && cat sources/meta-yoe/conf/distro/yoe.inc | grep 'DISTRO_CODENAME =' | cut -d' ' -f 3 )" >> $GITHUB_OUTPUT
        id: ver
      - name: Release Notes
        uses: CSchoel/release-notes-from-changelog@v1
      - name: Show Release Notes
        run: |
          cat RELEASE.md

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }} ${{ steps.ver.outputs.ver }}
          tag_name: ${{ github.ref }}
          body_path: RELEASE.md # generated by release-notes-from-changelog
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: deploy/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
#      - name: upload beaglebone artifact
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./deploy/beaglebone_0.0.1.wic.xz
#          asset_name: beaglebone_0.0.1.wic.xz
#          asset_content_type: application/xz
#      - name: upload raspberrypi4-64 artifact
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./deploy/raspberrypi4-64_0.0.1.wic.xz
#          asset_name: raspberrypi4-64_0.0.1.wic.xz
#          asset_content_type: application/xz
